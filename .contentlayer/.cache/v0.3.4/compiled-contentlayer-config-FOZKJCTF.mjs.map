{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { readFileSync } from 'fs';\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport remarkGfm from 'remark-gfm';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport readingTime from 'reading-time';\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath,\n  },\n  readingTime: {\n    type: 'string',\n    resolve: (doc) => readingTime(doc.body.raw, { wordsPerMinute: 275 }).text,\n  },\n  structuredData: {\n    type: 'object',\n    resolve: (doc) => ({\n      '@context': 'https://schema.org',\n      '@type': 'BlogPosting',\n      headline: doc.title,\n      datePublished: doc.publishedAt,\n      dateModified: doc.publishedAt,\n      description: doc.summary,\n      image: doc.image ? `https://johnie.se${doc.image}` : `https://johnie.se/og?title=${doc.title}`,\n      url: `https://johnie.se/writings/${doc._raw.flattenedPath}`,\n      author: {\n        '@type': 'Person',\n        name: 'Johnie Hjelm',\n      },\n    }),\n  },\n};\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    publishedAt: {\n      type: 'string',\n      required: true,\n    },\n    summary: {\n      type: 'string',\n      required: true,\n    },\n    image: {\n      type: 'string',\n    },\n  },\n  computedFields,\n}));\n\nexport const Page = defineDocumentType(() => ({\n  name: 'Page',\n  filePathPattern: `page/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    summary: {\n      type: 'string',\n    },\n    image: {\n      type: 'string',\n    },\n  },\n}));\n\nexport const Work = defineDocumentType(() => ({\n  name: 'Work',\n  filePathPattern: `work/**/*.yml`,\n  contentType: 'yml',\n  fields: {\n    company: {\n      type: 'string',\n      required: true,\n    },\n    role: {\n      type: 'string',\n      required: true,\n    },\n    url: {\n      type: 'string',\n    },\n    startYear: {\n      type: 'number',\n      required: true,\n    },\n    endYear: {\n      type: 'number',\n    },\n    present: {\n      type: 'boolean',\n    },\n    image: {\n      type: 'string',\n    },\n  },\n}));\n\nexport const Project = defineDocumentType(() => ({\n  name: 'Project',\n  filePathPattern: `projects/**/*.yml`,\n  contentType: 'yml',\n  fields: {\n    name: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: true,\n    },\n    url: {\n      type: 'string',\n    },\n    projectType: {\n      type: 'string',\n    },\n    image: {\n      type: 'string',\n    },\n    order: {\n      type: 'number',\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Post, Page, Work, Project],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypePrettyCode,\n        {\n          theme: JSON.parse(readFileSync(new URL('../../../themes/will.json', import.meta.url))),\n          onVisitLine(node) {\n            if (node.children.length === 0) {\n              node.children = [{ type: 'text', value: ' ' }];\n            }\n          },\n          onVisitHighlightedLine(node) {\n            node.properties.className.push('line--highlighted');\n          },\n          onVisitHighlightedWord(node) {\n            node.properties.className = ['word--highlighted'];\n          },\n        },\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor'],\n          },\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
